// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gerenciamento_Clientes.Migrations
{
    [DbContext(typeof(BancodeDados))]
    [Migration("20240424173947_VersaoAlterada240420242")]
    partial class VersaoAlterada240420242
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ChamadoManutencao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataPrimeiroContato")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescricaoProblema")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EmpreiteiroID")
                        .HasColumnType("int");

                    b.Property<string>("EmpreiteirosNecessarios")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EquipeManutencaoID")
                        .HasColumnType("int");

                    b.Property<string>("MotivoNaoRealizacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeResidencialID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmpreiteiroID");

                    b.HasIndex("EquipeManutencaoID");

                    b.ToTable("ChamadoManutencao");
                });

            modelBuilder.Entity("ClienteResidencial", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ImovelID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ImovelID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Empreiteiro", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Empreiteiros");
                });

            modelBuilder.Entity("EquipeManutencao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("EquipeManutencao");
                });

            modelBuilder.Entity("Imovel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Condominios");
                });

            modelBuilder.Entity("LiderEquipe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EquipeID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("EquipeID")
                        .IsUnique();

                    b.ToTable("LiderEquipe");
                });

            modelBuilder.Entity("Manutencoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("chamado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Manutencoes");
                });

            modelBuilder.Entity("Obra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("UnidadeResidencial", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CondominioID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EdificioID")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("ObraID")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ObraID");

                    b.ToTable("UnidadeResidencial");
                });

            modelBuilder.Entity("ChamadoManutencao", b =>
                {
                    b.HasOne("Empreiteiro", null)
                        .WithMany("ManutencoesAtendidas")
                        .HasForeignKey("EmpreiteiroID");

                    b.HasOne("EquipeManutencao", null)
                        .WithMany("ManutencoesAtendidas")
                        .HasForeignKey("EquipeManutencaoID");
                });

            modelBuilder.Entity("ClienteResidencial", b =>
                {
                    b.HasOne("Imovel", "Imovel")
                        .WithMany("ClientesResidenciais")
                        .HasForeignKey("ImovelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("LiderEquipe", b =>
                {
                    b.HasOne("EquipeManutencao", "Equipe")
                        .WithOne("Lider")
                        .HasForeignKey("LiderEquipe", "EquipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("UnidadeResidencial", b =>
                {
                    b.HasOne("Obra", null)
                        .WithMany("UnidadesResidenciais")
                        .HasForeignKey("ObraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Empreiteiro", b =>
                {
                    b.Navigation("ManutencoesAtendidas");
                });

            modelBuilder.Entity("EquipeManutencao", b =>
                {
                    b.Navigation("Lider")
                        .IsRequired();

                    b.Navigation("ManutencoesAtendidas");
                });

            modelBuilder.Entity("Imovel", b =>
                {
                    b.Navigation("ClientesResidenciais");
                });

            modelBuilder.Entity("Obra", b =>
                {
                    b.Navigation("UnidadesResidenciais");
                });
#pragma warning restore 612, 618
        }
    }
}
